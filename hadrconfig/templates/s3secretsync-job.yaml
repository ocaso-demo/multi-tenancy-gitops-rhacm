apiVersion: batch/v1
kind: Job
metadata:
  name: secretsync-job
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "450"
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/openshift/origin-cli:latest
          command:
            - /bin/sh
            - -c
            - |

              SECRETS=$(oc get cm ramen-hub-operator-config -n openshift-dr-system -o jsonpath="{['data']['ramen_manager_config\.yaml']}"|grep name:|awk '{print $2}')
              for s in $SECRETS; do
                oc get secret $s -n openshift-dr-system -o yaml > /tmp/$s.yaml
              done

              {{ range $idx, $cluster := .Values.clusters }}
              export KUBECONFIG=/data/{{ .name }}-kubeconfig
              echo KUBECONFIG=$KUBECONFIG
              {{ include "cluster.login" $cluster | nindent 14 }}

              for s in $SECRETS; do
                oc create -f /tmp/$s.yaml -n openshift-dr-system
              done
              unset KUBECONFIG

              {{ end }}
              {{ range $idx, $cluster := .Values.clusters }}
              export KUBECONFIG=/data/{{ .name }}-kubeconfig
              echo KUBECONFIG=$KUBECONFIG
              oc apply -f /data/odr-s3secret-primary.yaml
              oc apply -f /data/odr-s3secret-secondary.yaml
              unset KUBECONFIG
              {{ end }}

          volumeMounts:
            - name: workdir
              mountPath: /data
      restartPolicy: Never
      volumes:
        - name: workdir
          emptyDir: {}
      serviceAccountName: openshift-gitops-cntk-argocd-application-controller
  backoffLimit: 4
